package solutions.year2022;

import java.util.List;
import java.util.Map;

import com.github.aoclib.api.InputParser;
import com.github.aoclib.solver.DayX;

/**
 * <p>
 * AUTOGENERATED BY DayGenerator.java
 * </p>
 *
 * <p>
 * https://github.com/vilhok/aoc-lib
 * </p>
 *
 * <p>
 * Edits in this file will not be overwritten.
 * </p>
 *
 */
public class Year2022Day02 extends DayX {
	
	static final Map<Character, Character> WINS = Map.of('B', 'A', 'A', 'C', 'C', 'B');
	
	/*
	 * 
	 */
	@Override
	public Object firstPart(InputParser input) {
		int points = 0;

		for (String s : input.getLines()) {
			s = s.replace('X', 'A').replace('Y', 'B').replace('Z', 'C');
			
			char other = s.charAt(0);
			char me = s.charAt(2);

			points += getPoints(me, other);
		}
		return points;
	}

	public int getPoints(char me, char other) {
		int points = 0;
		String games = "_ABC";
		
		if (me == other) {
			points += 3;
		} else if (WINS.get(me) == other) {
			points += 6;
		}

		points += games.indexOf(me);
		return points;
	}

	@Override
	public Object secondPart(InputParser input) {
		int points = 0;

		for (String s : input.getLines()) {
			char other = s.charAt(0);
			char result = s.charAt(2);

			char me;

			if (result == 'Y') {
				me = other;
			} else if (result == 'X') {
				me = WINS.get(other);
			} else {
				me = WINS.get(WINS.get(other));
			}

			points += getPoints(me, other);
		}
		return points;
	}

	/*
	 * Optional: add tests for each part in the following methods
	 *
	 * These methods have blank implementations in superclass as well and can be
	 * deleted if you don't want to include tests.
	 *
	 * Add test as follows:
	 *
	 * new Test("sampleinput", expectedSolution);
	 *
	 * Collect the tests from the task web page.
	 */

	@Override
	protected void insertTestsPart1(List<Test> tests) {

	}

	@Override
	protected void insertTestsPart2(List<Test> tests) {

	}
}
